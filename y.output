Terminals unused in grammar

   FOR


State 31 conflicts: 1 shift/reduce
State 36 conflicts: 1 shift/reduce
State 46 conflicts: 1 shift/reduce
State 47 conflicts: 1 shift/reduce
State 52 conflicts: 1 shift/reduce
State 56 conflicts: 1 shift/reduce
State 60 conflicts: 1 shift/reduce
State 62 conflicts: 1 shift/reduce
State 63 conflicts: 1 shift/reduce
State 64 conflicts: 1 shift/reduce
State 65 conflicts: 1 shift/reduce
State 66 conflicts: 1 shift/reduce
State 67 conflicts: 1 shift/reduce
State 71 conflicts: 1 shift/reduce
State 72 conflicts: 1 shift/reduce
State 86 conflicts: 1 shift/reduce
State 101 conflicts: 1 shift/reduce
State 102 conflicts: 1 shift/reduce
State 109 conflicts: 1 shift/reduce
State 128 conflicts: 1 shift/reduce


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    8            | identifiers COLON INTEGER var
    9            | identifiers COLON ENUM L_PAREN identifiers R_PAREN

   10 statements: %empty
   11           | statement SEMICOLON statements

   12 statement: %empty
   13          | var ASSIGN expressions
   14          | IF boolexpressions THEN statements ENDIF
   15          | IF boolexpressions THEN statements ELSE statements ENDIF
   16          | WHILE boolexpressions BEGINLOOP statements ENDLOOP
   17          | DO BEGINLOOP statements ENDLOOP WHILE boolexpressions
   18          | READ vars
   19          | WRITE vars
   20          | CONTINUE
   21          | RETURN expressions

   22 boolexpressions: relationandexpressions
   23                | relationandexpressions OR relationandexpressions

   24 relationandexpressions: relationexpressions
   25                       | relationexpressions AND relationandexpressions

   26 relationexpressions: NOT relationexpress
   27                    | relationexpress

   28 relationexpress: expressions comps expressions
   29                | TRUE
   30                | FALSE
   31                | L_PAREN boolexpressions R_PAREN

   32 comps: EQ
   33      | NEQ
   34      | LT
   35      | GT
   36      | LTE
   37      | GTE

   38 expressions: expression
   39            | expression COMMA expressions

   40 expression: multiplicative_expression
   41           | multiplicative_expression ADD expression
   42           | multiplicative_expression SUB expression

   43 multiplicative_expression: term
   44                          | term MULT multiplicative_expression
   45                          | term DIV multiplicative_expression
   46                          | term MOD multiplicative_expression

   47 term: var
   48     | SUB var
   49     | NUMBER
   50     | SUB NUMBER
   51     | L_PAREN expression R_PAREN
   52     | SUB L_PAREN expression R_PAREN
   53     | IDENT L_PAREN expressions R_PAREN

   54 vars: var
   55     | var COMMA vars

   56 var: identifier
   57    | identifier L_SQUARE_BRACKET expressions R_SQUARE_BRACKET

   58 identifiers: identifier
   59            | identifier COMMA identifiers

   60 identifier: %empty
   61           | IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
FOR (258)
FUNCTION (259) 4
BEGIN_PARAMS (260) 4
END_PARAMS (261) 4
BEGIN_LOCALS (262) 4
END_LOCALS (263) 4
BEGIN_BODY (264) 4
END_BODY (265) 4
INTEGER (266) 7 8
ARRAY (267) 7
ENUM (268) 9
OF (269) 7
IF (270) 14 15
THEN (271) 14 15
ENDIF (272) 14 15
ELSE (273) 15
WHILE (274) 16 17
DO (275) 17
BEGINLOOP (276) 16 17
ENDLOOP (277) 16 17
CONTINUE (278) 20
READ (279) 18
WRITE (280) 19
TRUE (281) 29
FALSE (282) 30
RETURN (283) 21
MULT (284) 44
ADD (285) 41
DIV (286) 45
SUB (287) 42 48 50 52
MOD (288) 46
SEMICOLON (289) 4 6 11
COLON (290) 7 8 9
COMMA (291) 39 55 59
L_PAREN (292) 9 31 51 52 53
R_PAREN (293) 9 31 51 52 53
L_SQUARE_BRACKET (294) 7 57
R_SQUARE_BRACKET (295) 7 57
NUMBER (296) 7 49 50
IDENT (297) 4 53 61
AND (298) 25
OR (299) 23
EQ (300) 32
NEQ (301) 33
LT (302) 34
GT (303) 35
LTE (304) 36
GTE (305) 37
NOT (306) 26
ASSIGN (307) 13


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
PROGRAM (54)
    on left: 1, on right: 0
functions (55)
    on left: 2 3, on right: 1 3
function (56)
    on left: 4, on right: 3
declarations (57)
    on left: 5 6, on right: 4 6
declaration (58)
    on left: 7 8 9, on right: 6
statements (59)
    on left: 10 11, on right: 4 11 14 15 16 17
statement (60)
    on left: 12 13 14 15 16 17 18 19 20 21, on right: 11
boolexpressions (61)
    on left: 22 23, on right: 14 15 16 17 31
relationandexpressions (62)
    on left: 24 25, on right: 22 23 25
relationexpressions (63)
    on left: 26 27, on right: 24 25
relationexpress (64)
    on left: 28 29 30 31, on right: 26 27
comps (65)
    on left: 32 33 34 35 36 37, on right: 28
expressions (66)
    on left: 38 39, on right: 13 21 28 39 53 57
expression (67)
    on left: 40 41 42, on right: 38 39 41 42 51 52
multiplicative_expression (68)
    on left: 43 44 45 46, on right: 40 41 42 44 45 46
term (69)
    on left: 47 48 49 50 51 52 53, on right: 43 44 45 46
vars (70)
    on left: 54 55, on right: 18 19 55
var (71)
    on left: 56 57, on right: 8 13 47 48 54 55
identifiers (72)
    on left: 58 59, on right: 7 8 9 59
identifier (73)
    on left: 60 61, on right: 56 57 58 59


State 0

    0 $accept: . PROGRAM $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    PROGRAM    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 6


State 3

    1 PROGRAM: functions .

    $default  reduce using rule 1 (PROGRAM)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: PROGRAM $end .

    $default  accept


State 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    END_PARAMS  reduce using rule 5 (declarations)
    $default    reduce using rule 60 (identifier)

    declarations  go to state 11
    declaration   go to state 12
    identifiers   go to state 13
    identifier    go to state 14


State 10

   61 identifier: IDENT .

    $default  reduce using rule 61 (identifier)


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    7 declaration: identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    8            | identifiers . COLON INTEGER var
    9            | identifiers . COLON ENUM L_PAREN identifiers R_PAREN

    COLON  shift, and go to state 17


State 14

   58 identifiers: identifier .
   59            | identifier . COMMA identifiers

    COMMA  shift, and go to state 18

    $default  reduce using rule 58 (identifiers)


State 15

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    COLON     reduce using rule 60 (identifier)
    COMMA     reduce using rule 60 (identifier)
    $default  reduce using rule 5 (declarations)

    declarations  go to state 20
    declaration   go to state 12
    identifiers   go to state 13
    identifier    go to state 14


State 17

    7 declaration: identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    8            | identifiers COLON . INTEGER var
    9            | identifiers COLON . ENUM L_PAREN identifiers R_PAREN

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22
    ENUM     shift, and go to state 23


State 18

   59 identifiers: identifier COMMA . identifiers

    IDENT  shift, and go to state 10

    $default  reduce using rule 60 (identifier)

    identifiers  go to state 24
    identifier   go to state 14


State 19

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    END_LOCALS  reduce using rule 5 (declarations)
    $default    reduce using rule 60 (identifier)

    declarations  go to state 25
    declaration   go to state 12
    identifiers   go to state 13
    identifier    go to state 14


State 20

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 21

    8 declaration: identifiers COLON INTEGER . var

    IDENT  shift, and go to state 10

    $default  reduce using rule 60 (identifier)

    var         go to state 26
    identifier  go to state 27


State 22

    7 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 28


State 23

    9 declaration: identifiers COLON ENUM . L_PAREN identifiers R_PAREN

    L_PAREN  shift, and go to state 29


State 24

   59 identifiers: identifier COMMA identifiers .

    $default  reduce using rule 59 (identifiers)


State 25

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 30


State 26

    8 declaration: identifiers COLON INTEGER var .

    $default  reduce using rule 8 (declaration)


State 27

   56 var: identifier .
   57    | identifier . L_SQUARE_BRACKET expressions R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 31

    $default  reduce using rule 56 (var)


State 28

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 32


State 29

    9 declaration: identifiers COLON ENUM L_PAREN . identifiers R_PAREN

    IDENT  shift, and go to state 10

    $default  reduce using rule 60 (identifier)

    identifiers  go to state 33
    identifier   go to state 14


State 30

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 34


State 31

   57 var: identifier L_SQUARE_BRACKET . expressions R_SQUARE_BRACKET

    SUB      shift, and go to state 35
    L_PAREN  shift, and go to state 36
    NUMBER   shift, and go to state 37
    IDENT    shift, and go to state 38

    SUB       [reduce using rule 60 (identifier)]
    $default  reduce using rule 60 (identifier)

    expressions                go to state 39
    expression                 go to state 40
    multiplicative_expression  go to state 41
    term                       go to state 42
    var                        go to state 43
    identifier                 go to state 27


State 32

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 44


State 33

    9 declaration: identifiers COLON ENUM L_PAREN identifiers . R_PAREN

    R_PAREN  shift, and go to state 45


State 34

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 46
    WHILE     shift, and go to state 47
    DO        shift, and go to state 48
    CONTINUE  shift, and go to state 49
    READ      shift, and go to state 50
    WRITE     shift, and go to state 51
    RETURN    shift, and go to state 52
    IDENT     shift, and go to state 10

    END_BODY   reduce using rule 10 (statements)
    SEMICOLON  reduce using rule 12 (statement)
    $default   reduce using rule 60 (identifier)

    statements  go to state 53
    statement   go to state 54
    var         go to state 55
    identifier  go to state 27


State 35

   48 term: SUB . var
   50     | SUB . NUMBER
   52     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 10

    $default  reduce using rule 60 (identifier)

    var         go to state 58
    identifier  go to state 27


State 36

   51 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 35
    L_PAREN  shift, and go to state 36
    NUMBER   shift, and go to state 37
    IDENT    shift, and go to state 38

    SUB       [reduce using rule 60 (identifier)]
    $default  reduce using rule 60 (identifier)

    expression                 go to state 59
    multiplicative_expression  go to state 41
    term                       go to state 42
    var                        go to state 43
    identifier                 go to state 27


State 37

   49 term: NUMBER .

    $default  reduce using rule 49 (term)


State 38

   53 term: IDENT . L_PAREN expressions R_PAREN
   61 identifier: IDENT .

    L_PAREN  shift, and go to state 60

    $default  reduce using rule 61 (identifier)


State 39

   57 var: identifier L_SQUARE_BRACKET expressions . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 61


State 40

   38 expressions: expression .
   39            | expression . COMMA expressions

    COMMA  shift, and go to state 62

    $default  reduce using rule 38 (expressions)


State 41

   40 expression: multiplicative_expression .
   41           | multiplicative_expression . ADD expression
   42           | multiplicative_expression . SUB expression

    ADD  shift, and go to state 63
    SUB  shift, and go to state 64

    $default  reduce using rule 40 (expression)


State 42

   43 multiplicative_expression: term .
   44                          | term . MULT multiplicative_expression
   45                          | term . DIV multiplicative_expression
   46                          | term . MOD multiplicative_expression

    MULT  shift, and go to state 65
    DIV   shift, and go to state 66
    MOD   shift, and go to state 67

    $default  reduce using rule 43 (multiplicative_expression)


State 43

   47 term: var .

    $default  reduce using rule 47 (term)


State 44

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 68


State 45

    9 declaration: identifiers COLON ENUM L_PAREN identifiers R_PAREN .

    $default  reduce using rule 9 (declaration)


State 46

   14 statement: IF . boolexpressions THEN statements ENDIF
   15          | IF . boolexpressions THEN statements ELSE statements ENDIF

    TRUE     shift, and go to state 69
    FALSE    shift, and go to state 70
    SUB      shift, and go to state 35
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 37
    IDENT    shift, and go to state 38
    NOT      shift, and go to state 72

    SUB       [reduce using rule 60 (identifier)]
    $default  reduce using rule 60 (identifier)

    boolexpressions            go to state 73
    relationandexpressions     go to state 74
    relationexpressions        go to state 75
    relationexpress            go to state 76
    expressions                go to state 77
    expression                 go to state 40
    multiplicative_expression  go to state 41
    term                       go to state 42
    var                        go to state 43
    identifier                 go to state 27


State 47

   16 statement: WHILE . boolexpressions BEGINLOOP statements ENDLOOP

    TRUE     shift, and go to state 69
    FALSE    shift, and go to state 70
    SUB      shift, and go to state 35
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 37
    IDENT    shift, and go to state 38
    NOT      shift, and go to state 72

    SUB       [reduce using rule 60 (identifier)]
    $default  reduce using rule 60 (identifier)

    boolexpressions            go to state 78
    relationandexpressions     go to state 74
    relationexpressions        go to state 75
    relationexpress            go to state 76
    expressions                go to state 77
    expression                 go to state 40
    multiplicative_expression  go to state 41
    term                       go to state 42
    var                        go to state 43
    identifier                 go to state 27


State 48

   17 statement: DO . BEGINLOOP statements ENDLOOP WHILE boolexpressions

    BEGINLOOP  shift, and go to state 79


State 49

   20 statement: CONTINUE .

    $default  reduce using rule 20 (statement)


State 50

   18 statement: READ . vars

    IDENT  shift, and go to state 10

    $default  reduce using rule 60 (identifier)

    vars        go to state 80
    var         go to state 81
    identifier  go to state 27


State 51

   19 statement: WRITE . vars

    IDENT  shift, and go to state 10

    $default  reduce using rule 60 (identifier)

    vars        go to state 82
    var         go to state 81
    identifier  go to state 27


State 52

   21 statement: RETURN . expressions

    SUB      shift, and go to state 35
    L_PAREN  shift, and go to state 36
    NUMBER   shift, and go to state 37
    IDENT    shift, and go to state 38

    SUB       [reduce using rule 60 (identifier)]
    $default  reduce using rule 60 (identifier)

    expressions                go to state 83
    expression                 go to state 40
    multiplicative_expression  go to state 41
    term                       go to state 42
    var                        go to state 43
    identifier                 go to state 27


State 53

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 84


State 54

   11 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 85


State 55

   13 statement: var . ASSIGN expressions

    ASSIGN  shift, and go to state 86


State 56

   52 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 35
    L_PAREN  shift, and go to state 36
    NUMBER   shift, and go to state 37
    IDENT    shift, and go to state 38

    SUB       [reduce using rule 60 (identifier)]
    $default  reduce using rule 60 (identifier)

    expression                 go to state 87
    multiplicative_expression  go to state 41
    term                       go to state 42
    var                        go to state 43
    identifier                 go to state 27


State 57

   50 term: SUB NUMBER .

    $default  reduce using rule 50 (term)


State 58

   48 term: SUB var .

    $default  reduce using rule 48 (term)


State 59

   51 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 88


State 60

   53 term: IDENT L_PAREN . expressions R_PAREN

    SUB      shift, and go to state 35
    L_PAREN  shift, and go to state 36
    NUMBER   shift, and go to state 37
    IDENT    shift, and go to state 38

    SUB       [reduce using rule 60 (identifier)]
    $default  reduce using rule 60 (identifier)

    expressions                go to state 89
    expression                 go to state 40
    multiplicative_expression  go to state 41
    term                       go to state 42
    var                        go to state 43
    identifier                 go to state 27


State 61

   57 var: identifier L_SQUARE_BRACKET expressions R_SQUARE_BRACKET .

    $default  reduce using rule 57 (var)


State 62

   39 expressions: expression COMMA . expressions

    SUB      shift, and go to state 35
    L_PAREN  shift, and go to state 36
    NUMBER   shift, and go to state 37
    IDENT    shift, and go to state 38

    SUB       [reduce using rule 60 (identifier)]
    $default  reduce using rule 60 (identifier)

    expressions                go to state 90
    expression                 go to state 40
    multiplicative_expression  go to state 41
    term                       go to state 42
    var                        go to state 43
    identifier                 go to state 27


State 63

   41 expression: multiplicative_expression ADD . expression

    SUB      shift, and go to state 35
    L_PAREN  shift, and go to state 36
    NUMBER   shift, and go to state 37
    IDENT    shift, and go to state 38

    SUB       [reduce using rule 60 (identifier)]
    $default  reduce using rule 60 (identifier)

    expression                 go to state 91
    multiplicative_expression  go to state 41
    term                       go to state 42
    var                        go to state 43
    identifier                 go to state 27


State 64

   42 expression: multiplicative_expression SUB . expression

    SUB      shift, and go to state 35
    L_PAREN  shift, and go to state 36
    NUMBER   shift, and go to state 37
    IDENT    shift, and go to state 38

    SUB       [reduce using rule 60 (identifier)]
    $default  reduce using rule 60 (identifier)

    expression                 go to state 92
    multiplicative_expression  go to state 41
    term                       go to state 42
    var                        go to state 43
    identifier                 go to state 27


State 65

   44 multiplicative_expression: term MULT . multiplicative_expression

    SUB      shift, and go to state 35
    L_PAREN  shift, and go to state 36
    NUMBER   shift, and go to state 37
    IDENT    shift, and go to state 38

    SUB       [reduce using rule 60 (identifier)]
    $default  reduce using rule 60 (identifier)

    multiplicative_expression  go to state 93
    term                       go to state 42
    var                        go to state 43
    identifier                 go to state 27


State 66

   45 multiplicative_expression: term DIV . multiplicative_expression

    SUB      shift, and go to state 35
    L_PAREN  shift, and go to state 36
    NUMBER   shift, and go to state 37
    IDENT    shift, and go to state 38

    SUB       [reduce using rule 60 (identifier)]
    $default  reduce using rule 60 (identifier)

    multiplicative_expression  go to state 94
    term                       go to state 42
    var                        go to state 43
    identifier                 go to state 27


State 67

   46 multiplicative_expression: term MOD . multiplicative_expression

    SUB      shift, and go to state 35
    L_PAREN  shift, and go to state 36
    NUMBER   shift, and go to state 37
    IDENT    shift, and go to state 38

    SUB       [reduce using rule 60 (identifier)]
    $default  reduce using rule 60 (identifier)

    multiplicative_expression  go to state 95
    term                       go to state 42
    var                        go to state 43
    identifier                 go to state 27


State 68

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 96


State 69

   29 relationexpress: TRUE .

    $default  reduce using rule 29 (relationexpress)


State 70

   30 relationexpress: FALSE .

    $default  reduce using rule 30 (relationexpress)


State 71

   31 relationexpress: L_PAREN . boolexpressions R_PAREN
   51 term: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 69
    FALSE    shift, and go to state 70
    SUB      shift, and go to state 35
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 37
    IDENT    shift, and go to state 38
    NOT      shift, and go to state 72

    SUB       [reduce using rule 60 (identifier)]
    $default  reduce using rule 60 (identifier)

    boolexpressions            go to state 97
    relationandexpressions     go to state 74
    relationexpressions        go to state 75
    relationexpress            go to state 76
    expressions                go to state 77
    expression                 go to state 98
    multiplicative_expression  go to state 41
    term                       go to state 42
    var                        go to state 43
    identifier                 go to state 27


State 72

   26 relationexpressions: NOT . relationexpress

    TRUE     shift, and go to state 69
    FALSE    shift, and go to state 70
    SUB      shift, and go to state 35
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 37
    IDENT    shift, and go to state 38

    SUB       [reduce using rule 60 (identifier)]
    $default  reduce using rule 60 (identifier)

    relationexpress            go to state 99
    expressions                go to state 77
    expression                 go to state 40
    multiplicative_expression  go to state 41
    term                       go to state 42
    var                        go to state 43
    identifier                 go to state 27


State 73

   14 statement: IF boolexpressions . THEN statements ENDIF
   15          | IF boolexpressions . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 100


State 74

   22 boolexpressions: relationandexpressions .
   23                | relationandexpressions . OR relationandexpressions

    OR  shift, and go to state 101

    $default  reduce using rule 22 (boolexpressions)


State 75

   24 relationandexpressions: relationexpressions .
   25                       | relationexpressions . AND relationandexpressions

    AND  shift, and go to state 102

    $default  reduce using rule 24 (relationandexpressions)


State 76

   27 relationexpressions: relationexpress .

    $default  reduce using rule 27 (relationexpressions)


State 77

   28 relationexpress: expressions . comps expressions

    EQ   shift, and go to state 103
    NEQ  shift, and go to state 104
    LT   shift, and go to state 105
    GT   shift, and go to state 106
    LTE  shift, and go to state 107
    GTE  shift, and go to state 108

    comps  go to state 109


State 78

   16 statement: WHILE boolexpressions . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 110


State 79

   17 statement: DO BEGINLOOP . statements ENDLOOP WHILE boolexpressions

    IF        shift, and go to state 46
    WHILE     shift, and go to state 47
    DO        shift, and go to state 48
    CONTINUE  shift, and go to state 49
    READ      shift, and go to state 50
    WRITE     shift, and go to state 51
    RETURN    shift, and go to state 52
    IDENT     shift, and go to state 10

    ENDLOOP    reduce using rule 10 (statements)
    SEMICOLON  reduce using rule 12 (statement)
    $default   reduce using rule 60 (identifier)

    statements  go to state 111
    statement   go to state 54
    var         go to state 55
    identifier  go to state 27


State 80

   18 statement: READ vars .

    $default  reduce using rule 18 (statement)


State 81

   54 vars: var .
   55     | var . COMMA vars

    COMMA  shift, and go to state 112

    $default  reduce using rule 54 (vars)


State 82

   19 statement: WRITE vars .

    $default  reduce using rule 19 (statement)


State 83

   21 statement: RETURN expressions .

    $default  reduce using rule 21 (statement)


State 84

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 85

   11 statements: statement SEMICOLON . statements

    IF        shift, and go to state 46
    WHILE     shift, and go to state 47
    DO        shift, and go to state 48
    CONTINUE  shift, and go to state 49
    READ      shift, and go to state 50
    WRITE     shift, and go to state 51
    RETURN    shift, and go to state 52
    IDENT     shift, and go to state 10

    SEMICOLON         reduce using rule 12 (statement)
    L_SQUARE_BRACKET  reduce using rule 60 (identifier)
    ASSIGN            reduce using rule 60 (identifier)
    $default          reduce using rule 10 (statements)

    statements  go to state 113
    statement   go to state 54
    var         go to state 55
    identifier  go to state 27


State 86

   13 statement: var ASSIGN . expressions

    SUB      shift, and go to state 35
    L_PAREN  shift, and go to state 36
    NUMBER   shift, and go to state 37
    IDENT    shift, and go to state 38

    SUB       [reduce using rule 60 (identifier)]
    $default  reduce using rule 60 (identifier)

    expressions                go to state 114
    expression                 go to state 40
    multiplicative_expression  go to state 41
    term                       go to state 42
    var                        go to state 43
    identifier                 go to state 27


State 87

   52 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 115


State 88

   51 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 51 (term)


State 89

   53 term: IDENT L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 116


State 90

   39 expressions: expression COMMA expressions .

    $default  reduce using rule 39 (expressions)


State 91

   41 expression: multiplicative_expression ADD expression .

    $default  reduce using rule 41 (expression)


State 92

   42 expression: multiplicative_expression SUB expression .

    $default  reduce using rule 42 (expression)


State 93

   44 multiplicative_expression: term MULT multiplicative_expression .

    $default  reduce using rule 44 (multiplicative_expression)


State 94

   45 multiplicative_expression: term DIV multiplicative_expression .

    $default  reduce using rule 45 (multiplicative_expression)


State 95

   46 multiplicative_expression: term MOD multiplicative_expression .

    $default  reduce using rule 46 (multiplicative_expression)


State 96

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 7 (declaration)


State 97

   31 relationexpress: L_PAREN boolexpressions . R_PAREN

    R_PAREN  shift, and go to state 117


State 98

   38 expressions: expression .
   39            | expression . COMMA expressions
   51 term: L_PAREN expression . R_PAREN

    COMMA    shift, and go to state 62
    R_PAREN  shift, and go to state 88

    $default  reduce using rule 38 (expressions)


State 99

   26 relationexpressions: NOT relationexpress .

    $default  reduce using rule 26 (relationexpressions)


State 100

   14 statement: IF boolexpressions THEN . statements ENDIF
   15          | IF boolexpressions THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 46
    WHILE     shift, and go to state 47
    DO        shift, and go to state 48
    CONTINUE  shift, and go to state 49
    READ      shift, and go to state 50
    WRITE     shift, and go to state 51
    RETURN    shift, and go to state 52
    IDENT     shift, and go to state 10

    SEMICOLON         reduce using rule 12 (statement)
    L_SQUARE_BRACKET  reduce using rule 60 (identifier)
    ASSIGN            reduce using rule 60 (identifier)
    $default          reduce using rule 10 (statements)

    statements  go to state 118
    statement   go to state 54
    var         go to state 55
    identifier  go to state 27


State 101

   23 boolexpressions: relationandexpressions OR . relationandexpressions

    TRUE     shift, and go to state 69
    FALSE    shift, and go to state 70
    SUB      shift, and go to state 35
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 37
    IDENT    shift, and go to state 38
    NOT      shift, and go to state 72

    SUB       [reduce using rule 60 (identifier)]
    $default  reduce using rule 60 (identifier)

    relationandexpressions     go to state 119
    relationexpressions        go to state 75
    relationexpress            go to state 76
    expressions                go to state 77
    expression                 go to state 40
    multiplicative_expression  go to state 41
    term                       go to state 42
    var                        go to state 43
    identifier                 go to state 27


State 102

   25 relationandexpressions: relationexpressions AND . relationandexpressions

    TRUE     shift, and go to state 69
    FALSE    shift, and go to state 70
    SUB      shift, and go to state 35
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 37
    IDENT    shift, and go to state 38
    NOT      shift, and go to state 72

    SUB       [reduce using rule 60 (identifier)]
    $default  reduce using rule 60 (identifier)

    relationandexpressions     go to state 120
    relationexpressions        go to state 75
    relationexpress            go to state 76
    expressions                go to state 77
    expression                 go to state 40
    multiplicative_expression  go to state 41
    term                       go to state 42
    var                        go to state 43
    identifier                 go to state 27


State 103

   32 comps: EQ .

    $default  reduce using rule 32 (comps)


State 104

   33 comps: NEQ .

    $default  reduce using rule 33 (comps)


State 105

   34 comps: LT .

    $default  reduce using rule 34 (comps)


State 106

   35 comps: GT .

    $default  reduce using rule 35 (comps)


State 107

   36 comps: LTE .

    $default  reduce using rule 36 (comps)


State 108

   37 comps: GTE .

    $default  reduce using rule 37 (comps)


State 109

   28 relationexpress: expressions comps . expressions

    SUB      shift, and go to state 35
    L_PAREN  shift, and go to state 36
    NUMBER   shift, and go to state 37
    IDENT    shift, and go to state 38

    SUB       [reduce using rule 60 (identifier)]
    $default  reduce using rule 60 (identifier)

    expressions                go to state 121
    expression                 go to state 40
    multiplicative_expression  go to state 41
    term                       go to state 42
    var                        go to state 43
    identifier                 go to state 27


State 110

   16 statement: WHILE boolexpressions BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 46
    WHILE     shift, and go to state 47
    DO        shift, and go to state 48
    CONTINUE  shift, and go to state 49
    READ      shift, and go to state 50
    WRITE     shift, and go to state 51
    RETURN    shift, and go to state 52
    IDENT     shift, and go to state 10

    ENDLOOP    reduce using rule 10 (statements)
    SEMICOLON  reduce using rule 12 (statement)
    $default   reduce using rule 60 (identifier)

    statements  go to state 122
    statement   go to state 54
    var         go to state 55
    identifier  go to state 27


State 111

   17 statement: DO BEGINLOOP statements . ENDLOOP WHILE boolexpressions

    ENDLOOP  shift, and go to state 123


State 112

   55 vars: var COMMA . vars

    IDENT  shift, and go to state 10

    $default  reduce using rule 60 (identifier)

    vars        go to state 124
    var         go to state 81
    identifier  go to state 27


State 113

   11 statements: statement SEMICOLON statements .

    $default  reduce using rule 11 (statements)


State 114

   13 statement: var ASSIGN expressions .

    $default  reduce using rule 13 (statement)


State 115

   52 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 52 (term)


State 116

   53 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 53 (term)


State 117

   31 relationexpress: L_PAREN boolexpressions R_PAREN .

    $default  reduce using rule 31 (relationexpress)


State 118

   14 statement: IF boolexpressions THEN statements . ENDIF
   15          | IF boolexpressions THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 125
    ELSE   shift, and go to state 126


State 119

   23 boolexpressions: relationandexpressions OR relationandexpressions .

    $default  reduce using rule 23 (boolexpressions)


State 120

   25 relationandexpressions: relationexpressions AND relationandexpressions .

    $default  reduce using rule 25 (relationandexpressions)


State 121

   28 relationexpress: expressions comps expressions .

    $default  reduce using rule 28 (relationexpress)


State 122

   16 statement: WHILE boolexpressions BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 127


State 123

   17 statement: DO BEGINLOOP statements ENDLOOP . WHILE boolexpressions

    WHILE  shift, and go to state 128


State 124

   55 vars: var COMMA vars .

    $default  reduce using rule 55 (vars)


State 125

   14 statement: IF boolexpressions THEN statements ENDIF .

    $default  reduce using rule 14 (statement)


State 126

   15 statement: IF boolexpressions THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 46
    WHILE     shift, and go to state 47
    DO        shift, and go to state 48
    CONTINUE  shift, and go to state 49
    READ      shift, and go to state 50
    WRITE     shift, and go to state 51
    RETURN    shift, and go to state 52
    IDENT     shift, and go to state 10

    ENDIF      reduce using rule 10 (statements)
    SEMICOLON  reduce using rule 12 (statement)
    $default   reduce using rule 60 (identifier)

    statements  go to state 129
    statement   go to state 54
    var         go to state 55
    identifier  go to state 27


State 127

   16 statement: WHILE boolexpressions BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 16 (statement)


State 128

   17 statement: DO BEGINLOOP statements ENDLOOP WHILE . boolexpressions

    TRUE     shift, and go to state 69
    FALSE    shift, and go to state 70
    SUB      shift, and go to state 35
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 37
    IDENT    shift, and go to state 38
    NOT      shift, and go to state 72

    SUB       [reduce using rule 60 (identifier)]
    $default  reduce using rule 60 (identifier)

    boolexpressions            go to state 130
    relationandexpressions     go to state 74
    relationexpressions        go to state 75
    relationexpress            go to state 76
    expressions                go to state 77
    expression                 go to state 40
    multiplicative_expression  go to state 41
    term                       go to state 42
    var                        go to state 43
    identifier                 go to state 27


State 129

   15 statement: IF boolexpressions THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 131


State 130

   17 statement: DO BEGINLOOP statements ENDLOOP WHILE boolexpressions .

    $default  reduce using rule 17 (statement)


State 131

   15 statement: IF boolexpressions THEN statements ELSE statements ENDIF .

    $default  reduce using rule 15 (statement)
